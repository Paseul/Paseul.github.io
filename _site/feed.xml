<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-12-02T23:16:54+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Paseul’s Devlog</title><subtitle>C#, Python, Docker, Kubernetes, Deep learning, Reinforcement learning</subtitle><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author><entry><title type="html">우분투 쿠버네티스 설치</title><link href="http://localhost:4000/ubuntu/ubuntu_kubernetes_install/" rel="alternate" type="text/html" title="우분투 쿠버네티스 설치" /><published>2019-11-28T00:00:00+09:00</published><updated>2019-11-28T00:00:00+09:00</updated><id>http://localhost:4000/ubuntu/ubuntu_kubernetes_install</id><content type="html" xml:base="http://localhost:4000/ubuntu/ubuntu_kubernetes_install/">&lt;h1 id=&quot;우분투-환경에서-쿠버네티스-설치하기dashboard-까지&quot;&gt;우분투 환경에서 쿠버네티스 설치하기(dashboard 까지)&lt;/h1&gt;

&lt;p&gt;쿠버네티스를 설치하는 방법은 OS나 사용하는 플랫폼에 따라서 달라진다. &lt;br /&gt;
본 포스팅에서는 우분투 환경에서 쿠버네티스를 설치하고 추가적으로 쿠버네티스 대시보드까지 설치해 보도록 하겠다. &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;실행 환경: Ubuntu 18.04(LTS)&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;도커 버전: 19.03&lt;/code&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;쿠버네티스의 &lt;a href=&quot;https://kubernetes.io/ko/docs/setup/&quot;&gt;한글 문서&lt;/a&gt; 에 보면 공식적으로 지원하는 커뮤니티와 생태계를 확인할 수 있다. &lt;br /&gt;
윈도우의 경우에는 &lt;strong&gt;Docker Desktop&lt;/strong&gt; 을 설치하면 되겠구나 하는 생각이 들지만 나머지는 어떤걸 설치해야할지 막막해 진다. &lt;br /&gt;
모든 생태계 마다 설치하는 방법이 링크를 통해 설명되어 있으니 자신이 원하는 생태계를 선택하면 될 것 같다. &lt;br /&gt;
본인은 이중에서 &lt;a href=&quot;https://ubuntu.com/kubernetes/install#multi-node&quot;&gt;ubuntu.com&lt;/a&gt; 에 나온 MicroK8s를 사용하여 설치 해보았다 &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install the microk8s snap
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo snap install microk8s --classic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Check the status
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo microk8s.status --wait-ready
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Turn on standard services
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo microk8s.enable dns dashboard registry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;MicroK8s를 통해 kubectl 명령을 다음과 같이 수행할 수 있다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ microk8s.kubectl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이제 kubernetes dashboad를 설치하러 가보자
대시보드 UI는 기본으로 배포되지 않기 때문에 &lt;a href=&quot;https://kubernetes.io/ko/docs/tasks/access-application-cluster/web-ui-dashboard/&quot;&gt;쿠버네티스 대시보드 문서&lt;/a&gt; 를 참조하여 설치해 보도록 하겠다&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install kubenetes dashboard
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ microk8s.kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;설치가 종료되면 접속을 위한 토큰을 아래 명령을 통해 미리 생성해 둔다&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Bearer Token
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ microk8s.kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;이 명령을 입력하면 아래와 같이 토큰이 나온다 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name:         admin-user-token-v57nw
Namespace:    kubernetes-dashboard
Labels:       &amp;lt;none&amp;gt;
Annotations:  kubernetes.io/service-account.name: admin-user
              kubernetes.io/service-account.uid: 0303243c-4040-4a58-8a47-849ee9ba79c1

Type:  kubernetes.io/service-account-token

Data
====
ca.crt:     1066 bytes
namespace:  20 bytes
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXY1N253Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwMzAzMjQzYy00MDQwLTRhNTgtOGE0Ny04NDllZTliYTc5YzEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.Z2JrQlitASVwWbc-s6deLRFVk5DWD3P_vjUFXsqVSY10pbjFLG4njoZwh8p3tLxnX_VBsr7_6bwxhWSYChp9hwxznemD5x5HLtjb16kI9Z7yFWLtohzkTwuFbqmQaMoget_nYcQBUC5fDmBHRfFvNKePh_vSSb2h_aYXa8GV5AcfPQpY7r461itme1EXHQJqv-SN-zUnguDguCTjD80pFZ_CmnSE1z9QdMHPB8hoB4V68gtswR1VLa6mSYdgPwCHauuOobojALSaMc3RH7MmFUumAgguhqAkX3Omqd3rJbYOMRuMjhANqd08piDC3aIabINX6gP5-Tuuw2svnV6NYQ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;토큰이 생성되었다면 프록시 명령을 통해 대시보드를 사용할 수 있다&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;kubectl proxy
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ microk8s.kubectl proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그리고 &lt;a href=&quot;http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/&quot;&gt;http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/&lt;/a&gt; 에 접속하여 token을 입력하면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://d33wubrfki0l68.cloudfront.net/5f56e7ac82f10f46e70403a246c2b93efcf8b5b3/1c09f/images/docs/ui-dashboard-zerostate.png&quot; alt=&quot;웰컴 뷰&quot; /&gt;&lt;/p&gt;

&lt;p&gt;짜잔~! 대시보드를 확인할 수 있다&lt;/p&gt;</content><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author><category term="Ubuntu" /><category term="Docker" /><category term="Kubernetes" /><category term="Dashboard" /></entry><entry><title type="html">우분투 도커 설치</title><link href="http://localhost:4000/ubuntu/ubuntu_docker_install/" rel="alternate" type="text/html" title="우분투 도커 설치" /><published>2019-11-27T00:00:00+09:00</published><updated>2019-11-27T00:00:00+09:00</updated><id>http://localhost:4000/ubuntu/ubuntu_docker_install</id><content type="html" xml:base="http://localhost:4000/ubuntu/ubuntu_docker_install/">&lt;h1 id=&quot;우분투-도커-설치이미지-폴더-변경-까지&quot;&gt;우분투 도커 설치(이미지 폴더 변경 까지)&lt;/h1&gt;

&lt;p&gt;우분투 환경에서 도커를 설치하는 방법을 정리해 보고자 한다. 
실행 환경: Ubuntu 18.04(LTS)
도커 버전: 19.03&lt;/p&gt;

&lt;p&gt;도커 설치 과정은  &lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/ubuntu/&quot;&gt;docs.docker.com&lt;/a&gt; 를 참고하여 순서대로 설명해 보겠다.&lt;/p&gt;

&lt;h2 id=&quot;1-uninstall-old-versions&quot;&gt;1. Uninstall old versions&lt;/h2&gt;
&lt;p&gt;기존에 도커가 설치되어 있다면 도커를 삭제하고 도커 폴더 역시 삭제한다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 도커 삭제
$ sudo apt-get remove docker docker-engine docker.io containerd runc

# 도커 폴더 삭제
$ sudo rm -rf /var/lib/docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-set-up-the-repository&quot;&gt;2. Set up the repository&lt;/h2&gt;
&lt;p&gt;도커 엔진을 설치하기 전에 새로운 기기에 도커 저장소를 설정하여 도커를 설치 및 업데이트 한다&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# apt 패키지 업데이트
$ sudo apt-get update

# HTTPS를 통해 저장소를 사용하기 쉬운 패키지 설치
$ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
		
# 도커의 공식 GPG key 추가하기(생략 가능)
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
$ sudo apt-key fingerprint 0EBFCD88
    
pub   rsa4096 2017-02-22 [SCEA]
      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
uid           [ unknown] Docker Release (CE deb) &amp;lt;docker@docker.com&amp;gt;
sub   rsa4096 2017-02-22 [S]

# 안정적인 저장소 설정하기
$ sudo add-apt-repository \
   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-install-docker-ce&quot;&gt;3. Install docker-CE&lt;/h2&gt;
&lt;p&gt;이제 도커를 설치해보자&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# apt 패키지 업데이트 수행
$ sudo apt-get update

# 최신 도커 설치
$ sudo apt-get install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;31-install-nvidia-docker2option&quot;&gt;3.1 Install nvidia-docker2(Option)&lt;/h3&gt;
&lt;p&gt;추가적으로 nvidia-docker를 설치한다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install nvidia-docker2
$ sudo pkill -SIGHUP dockerd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;일반적으로 도커를 사용하는데 있어서 위의 절차까지 수행하면 크게 문제가 없다. &lt;br /&gt;
&lt;strong&gt;하지만&lt;/strong&gt; 도커의 이미지의 크기는 매우 크기 때문에 하드드라이브가 가득 차서 더이상 설치할 수 없게 된다. &lt;br /&gt;
그렇게 되지 않기 위하여 &lt;strong&gt;도커를 사용하면서 사용하지 않는 이미지나 컨테이너를 주기적으로 관리&lt;/strong&gt;해 주어야 하지만 대부분의 OS가 설치된 하드는 SSD이고 용량이 상대적으로 적기 때문에 &lt;strong&gt;도커 이미지 위치를 HDD로 변경&lt;/strong&gt;하여 사용한다&lt;/p&gt;

&lt;h2 id=&quot;4-docker-default-folder-change&quot;&gt;4. Docker default folder change&lt;/h2&gt;
&lt;p&gt;도커 폴더 변경은 &lt;a href=&quot;https://yookeun.github.io/docker/2018/10/29/docker-change/&quot;&gt;이곳&lt;/a&gt; 을 참조하였다. &lt;br /&gt; 2가지 방법이 나오는데 1번 방법(도커 실행 서비스에서 설정 변경)을 사용하였다&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/lib/systemd/system/docker.service&lt;/code&gt; 파일을 열고 아래 내용을 수정한다&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ExecStart=/usr/bin/dockerd -H fd://
ExecStart=/usr/bin/dockerd -g /media/username/data/docker -H fd://
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/media/username/data/docker&lt;/code&gt; 이 경로를 자신의 폴더 경로로 변경한다&lt;/p&gt;

&lt;p&gt;도커를 중지하고 기본 도커 폴더의 내용을 이동&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 기본 폴더안의 내용을 옮기기 위해 docker를 중지
$ sudo systemctl stop docker
$ sudo systemctl daemon-reload

# 기존 도커 경로의 파일을 복사
$ sudo rsync -aqxP /var/lib/docker /media/username/data/docker
$ sudo rm -rf /var/lib/docker

# 도커 시작 및 확인
$ sudo systemctl start docker
$ ps -ef | grep docker
root      1442     1  0 11월27 ?      00:00:05 /usr/bin/dockerd -g /media/username/data/docker -H fd://
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자신이 설정한 경로가 출력되는지 확인한다면 정상적으로 변경되었고 이제 마음것(?) 이미지를 생성할 수 있다!&lt;/p&gt;</content><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author><category term="Ubuntu" /><category term="Docker" /></entry><entry><title type="html">GAN 메인</title><link href="http://localhost:4000/deeplearning/gan_main/" rel="alternate" type="text/html" title="GAN 메인" /><published>2019-11-27T00:00:00+09:00</published><updated>2019-11-27T00:00:00+09:00</updated><id>http://localhost:4000/deeplearning/gan_main</id><content type="html" xml:base="http://localhost:4000/deeplearning/gan_main/">&lt;h1 id=&quot;생산적-적대-신경망generative-adversarial-networks-gan&quot;&gt;생산적 적대 신경망(generative adversarial networks, GAN)&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;두 개 이상의 신경망이 서로를 향하게 하고, 서로 대항하듯이 훈련하게 함으로써, 결과적으로&lt;br /&gt; &lt;strong&gt;생성 모델(generative model)&lt;/strong&gt; 을 산출해 낸다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://static.packt-cdn.com/products/9781789139907/graphics/1908d2b2-c04a-408d-9baf-f22b1bec49a0.png&quot; alt=&quot;GAN architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GAN의 구조는 생성기(generator)와 판별기(discriminator)라고 부르는 두 가지 신경망으로 구성되어 있다&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;생성기: 잠재 공간(latent space)에서 표본(samples)을 추출해 잠재 공간과 출력 간의 관계를 생성하는 역할 &lt;br /&gt; *한 모델 안에서 생성기와 판별기를 서로 연결해 적대 모드(adversarial mode)를 취하게 함으로써 생성기를 훈련&lt;/li&gt;
  &lt;li&gt;판별기: 생성기를 훈련함으로써 훈련된 판별기와 서로 균형을 잡는 방법을 학습 &lt;br /&gt; &lt;em&gt;판별기가 너무 뛰어나면 생성기가 발산(알아보기 힘든 데이터를 생성)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gan-출력&quot;&gt;GAN 출력&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Style transfer: 입력 이미지에 특정 스타일을 적용시키는 방법으로 적은 사례(examples)을 요구하는 것이 특징&lt;/li&gt;
  &lt;li&gt;DCGAN(deep convolution GAN): 입력 구문(input phrase)을 통해 출력 이미지를 생성&lt;/li&gt;
  &lt;li&gt;SimGAN: 모조 이미지(simulated image)를 통해 레이블이 붙은 데이터를 자동으로 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/network_1/&quot; class=&quot;btn btn--success btn--large&quot;&gt;네트워크 1장&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;출처: 실전 예제로 배우는 GAN, “위키북스”&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author><category term="Deep Learning" /><category term="GAN" /><category term="generative adversarial networks" /></entry><entry><title type="html">네트워크 메인</title><link href="http://localhost:4000/network_main/" rel="alternate" type="text/html" title="네트워크 메인" /><published>2019-11-26T00:00:00+09:00</published><updated>2019-11-26T00:00:00+09:00</updated><id>http://localhost:4000/network_main</id><content type="html" xml:base="http://localhost:4000/network_main/">&lt;h1 id=&quot;네트워크와-관련된-내용을-포스팅-해갈-예정입니다&quot;&gt;네트워크와 관련된 내용을 포스팅 해갈 예정입니다&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;/network_1/&quot; class=&quot;btn btn--success btn--large&quot;&gt;네트워크 1장&lt;/a&gt;&lt;/p&gt;</content><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author></entry><entry><title type="html">네트워크 1장</title><link href="http://localhost:4000/network_1/" rel="alternate" type="text/html" title="네트워크 1장" /><published>2019-11-19T00:00:00+09:00</published><updated>2019-11-19T00:00:00+09:00</updated><id>http://localhost:4000/network_1</id><content type="html" xml:base="http://localhost:4000/network_1/">&lt;h2 id=&quot;lesson-1-정리&quot;&gt;Lesson 1 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;컴퓨터 간의 연결을 컴퓨터 네트워크라고 부른다&lt;/li&gt;
  &lt;li&gt;인터넷은 전 세계의 큰 네트워크부터 작은 네트워크까지 연결하는 거대한 네트워크다&lt;/li&gt;
  &lt;li&gt;패킷은 컴퓨터 간의 데이터를 주고받을 때 네트워크를 통해 흘러가는 작은 데이터 조각이다&lt;/li&gt;
  &lt;li&gt;큰 데이터는 작은 패킷으로 분할한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lesson-2-정리&quot;&gt;Lesson 2 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;컴퓨터는 0과 1밖에 이해하지 못한다&lt;/li&gt;
  &lt;li&gt;정보를 나타내는 최소 단위를 비트라고 하며, 비트 여덟 개를 1바이트라고 한다&lt;/li&gt;
  &lt;li&gt;숫자와 문자의 대응표를 문자코드라고 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lesson-3-정리&quot;&gt;Lesson 3 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;건물 안이나 특정 지역을 범위로 하는 네트워크를 랜(Local Area Network, LAN)이라고 한다&lt;/li&gt;
  &lt;li&gt;인터넷 서비스 제공자(ISP)가 제공하는 서비스를 사용하여 구축한 네트워크를 왠(Wide Area Network, WAN)이라고 한다&lt;/li&gt;
  &lt;li&gt;랜은 왠보다 범위가 좁고 속도가 빠르며 오류가 발생할 확률이 낮다&lt;/li&gt;
  &lt;li&gt;왠은 랜보다 버무이가 넓고 속도가 느리며 오류가 발생할 확률이 높다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lesson-4-정리&quot;&gt;Lesson 4 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;우선 인터넷 서비스 제공자와 인터넷회선을 결정하고 계약한다&lt;/li&gt;
  &lt;li&gt;인터넷 서비스 제공자와 인터넷 공유기로 접속한다&lt;/li&gt;
  &lt;li&gt;접속 방식에는 유선 랜 방식과 무선 랜 방식이 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lesson-5-정리&quot;&gt;Lesson 5 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;DMZ는 외부에 공개하기 위한 네트워크다&lt;/li&gt;
  &lt;li&gt;외부에 공개하는 서버에는 주로 웹 서버, DNS 서버, 메일 서버가 있다&lt;/li&gt;
  &lt;li&gt;회사의 서버는 온프레미스나 클라우드로 운영되고 있다&lt;/li&gt;
  &lt;li&gt;각 서버나 컴퓨터는 스위치나 무선 랜 기능을 사용하여 사내 랜에 접속한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;용어-정리&quot;&gt;용어 정리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;네트워크&lt;/strong&gt;: 컴퓨터를 두 대 이상 연결하여 서로 데이터를 전송할 수 있는 통신망&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;인터넷&lt;/strong&gt;: TCP/IP 프로토콜을 사용하는 세계 최대 규모의 네트워크다. 전 세계의 컴퓨터를 서로 연결하여 정보를 교환할 수 있도록 만든 하나의 거대한 컴퓨터 통신망이다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;패킷&lt;/strong&gt;: 네트워크 통신을 할 때 사용되는 작게 분할된 데이터 조각으로 네트워크에서 전송하는 데이터의 기본 단위다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;비트&lt;/strong&gt;: 정보의 최소 단위로 0 또는 1을 나타낸다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;바이트&lt;/strong&gt;: 컴퓨터의 정보량 단위로 8비트를 1바이트라고 한다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;랜&lt;/strong&gt;: 비교적 가까운 거리에 위치한 장치들을 서로 연결한 네트워크를 말한다. 집, 사무실, 학교 등의 건물과 같이 가까운 지역을 연결하는 네트워크다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;왠&lt;/strong&gt;: 랜을 다시 하나로 묶은 거대한 네트워크다. 특정 도시, 국가, 대륙과 같이 매우 넓은 범위를 연결하는 네트워크를 말한다. 넓은 지역에 설치된 컴퓨터들 간의 정보와 자원을 공유하기에 적합하도록 설계한 컴퓨터 통신망이다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;인터넷 서비스 제공자&lt;/strong&gt;: 인터넷에 접속하는 수단을 제공하는 주체다. 일반 사용자, 기업체, 기관, 단체 등이 인터넷에 접속하여 인터넷을 이용할 수 있도록 돕는 사업자다. 현재는 KT, U+, SK브로드밴드와 같은 ISP가 인터넷 서비스를 제공한다&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;서버&lt;/strong&gt;: 컴퓨터 네트워크에서 다른 컴퓨터에 서비스를 제공하기 위한 컴퓨터 또는 프로그램이다&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jaehoon Lee</name><email>machianb@naver.com</email></author></entry></feed>